//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFAutenticacionExterna
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityObject", Namespace="http://schemas.datacontract.org/2004/07/EPSA.SCP.Infraestructure.Services")]
    public partial class SecurityObject : object
    {
        
        private System.Collections.Generic.List<string> ActionsField;
        
        private string DocumentNumberField;
        
        private string EmailField;
        
        private string NameField;
        
        private System.Collections.Generic.List<string> RolesField;
        
        private System.Collections.Generic.List<string> SectionsField;
        
        private string SessionIdField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Actions
        {
            get
            {
                return this.ActionsField;
            }
            set
            {
                this.ActionsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentNumber
        {
            get
            {
                return this.DocumentNumberField;
            }
            set
            {
                this.DocumentNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Roles
        {
            get
            {
                return this.RolesField;
            }
            set
            {
                this.RolesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Sections
        {
            get
            {
                return this.SectionsField;
            }
            set
            {
                this.SectionsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId
        {
            get
            {
                return this.SessionIdField;
            }
            set
            {
                this.SessionIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFAutenticacionExterna.IAuthentication")]
    public interface IAuthentication
    {
        
        // CODEGEN: Generando contrato de mensaje, ya que la operación tiene múltiples valores devueltos.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/loginSO", ReplyAction="http://tempuri.org/IAuthentication/loginSOResponse")]
        System.Threading.Tasks.Task<WCFAutenticacionExterna.loginSOResponse> loginSOAsync(WCFAutenticacionExterna.loginSORequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthentication/login", ReplyAction="http://tempuri.org/IAuthentication/loginResponse")]
        System.Threading.Tasks.Task<string> loginAsync(string userName, string password, string AppCode);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="loginSO", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class loginSORequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string AppCode;
        
        public loginSORequest()
        {
        }
        
        public loginSORequest(string userName, string password, string AppCode)
        {
            this.userName = userName;
            this.password = password;
            this.AppCode = AppCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="loginSOResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class loginSOResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public WCFAutenticacionExterna.SecurityObject loginSOResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string exception;
        
        public loginSOResponse()
        {
        }
        
        public loginSOResponse(WCFAutenticacionExterna.SecurityObject loginSOResult, string exception)
        {
            this.loginSOResult = loginSOResult;
            this.exception = exception;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IAuthenticationChannel : WCFAutenticacionExterna.IAuthentication, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class AuthenticationClient : System.ServiceModel.ClientBase<WCFAutenticacionExterna.IAuthentication>, WCFAutenticacionExterna.IAuthentication
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public AuthenticationClient() : 
                base(AuthenticationClient.GetDefaultBinding(), AuthenticationClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IAuthentication.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuthenticationClient(EndpointConfiguration endpointConfiguration) : 
                base(AuthenticationClient.GetBindingForEndpoint(endpointConfiguration), AuthenticationClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuthenticationClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AuthenticationClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuthenticationClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AuthenticationClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuthenticationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<WCFAutenticacionExterna.loginSOResponse> loginSOAsync(WCFAutenticacionExterna.loginSORequest request)
        {
            return base.Channel.loginSOAsync(request);
        }
        
        public System.Threading.Tasks.Task<string> loginAsync(string userName, string password, string AppCode)
        {
            return base.Channel.loginAsync(userName, password, AppCode);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IAuthentication))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IAuthentication))
            {
                return new System.ServiceModel.EndpointAddress("http://nube.epsa.com.co/servbus/Authentication.svc");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return AuthenticationClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IAuthentication);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return AuthenticationClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IAuthentication);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IAuthentication,
        }
    }
}
